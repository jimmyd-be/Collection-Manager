name: Full build

on:
  push:
    branches: 
      - feature/java

jobs:
  gui:
    runs-on: ubuntu-latest
    env:
      working-directory: ./gui
      working-directory-api: ./api 

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache node modules
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('gui/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: npm install
      working-directory: ${{env.working-directory}}
      run: npm install
    - name: Use Angular NG
      uses: mayur-rawte/github-angular-actions@latest
    - name: Angular Lint
      working-directory: ${{env.working-directory}}
      run: ng lint
    - name: Angular prod build
      working-directory: ${{env.working-directory}}
      run: ng build --prod
    - name: Create zip
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./gui.zip ./gui/dist
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: Gui
        path: ./gui.zip
  api:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Unit test + integration tests
        run: mvn verify --file api/pom.xml
      - name: Build with Maven
        run: mvn -B package --file api/pom.xml
      - run: mkdir artifacts && cp api/target/*.jar artifacts
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: Api
          path: artifacts

